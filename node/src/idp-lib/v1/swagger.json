{
    "openapi": "3.0.1",
    "info": {
        "title": "IS4 API",
        "version": "v1"
    },
    "servers": [
        {
            "url": "https://devtest-im-identity.azurewebsites.net/identity"
        }
    ],
    "paths": {
        "/api/Account/Profile": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get the user profile.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Account/Login": {
            "get": {
                "tags": [
                    "Account"
                ],
                "summary": "Get the necessary information required to display the login page.",
                "parameters": [
                    {
                        "name": "returnUrl",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginModel"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginModel"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/LoginModel"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Handle post-back from username/password login",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInputModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInputModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInputModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/LoginInputModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Account/Logout": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Handle logout page postback",
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Account/EmailConfirmation": {
            "post": {
                "tags": [
                    "Account"
                ],
                "summary": "Confirms the email address.",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmEmailModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmEmailModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmEmailModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConfirmEmailModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Account/ForgotPassword": {
            "post": {
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ForgotPasswordModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Account/ResetPassword": {
            "post": {
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ResetPasswordModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Account/ChangePassword": {
            "post": {
                "tags": [
                    "Account"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordModel"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordModel"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordModel"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePasswordModel"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/AntiForgery/generate": {
            "get": {
                "tags": [
                    "AntiForgery"
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/ApiResource": {
            "get": {
                "tags": [
                    "ApiResource"
                ],
                "summary": "Get the full list of identity server API Resources.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResource"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResource"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ApiResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ApiResource"
                ],
                "summary": "Creates a new identity server API Resource.",
                "requestBody": {
                    "description": "Command used to create a new identity server API Resource.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApiResourceCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApiResourceCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApiResourceCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateApiResourceCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ApiResource/{apiResourceName}": {
            "get": {
                "tags": [
                    "ApiResource"
                ],
                "summary": "Get the identity server API Resource that matches the provided name.",
                "parameters": [
                    {
                        "name": "apiResourceName",
                        "in": "path",
                        "description": "The  identity server API Resource unique resource name to fetch.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResource"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResource"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ApiResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ApiResource"
                ],
                "summary": "Updates the identity server API Resource entity.",
                "parameters": [
                    {
                        "name": "apiResourceName",
                        "in": "path",
                        "description": "The current name of the API Resource that will be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Command used to update a ApiResource.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApiResourceCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApiResourceCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApiResourceCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateApiResourceCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ApiResource"
                ],
                "summary": "Deletes the specified identity server API Resource.",
                "parameters": [
                    {
                        "name": "apiResourceName",
                        "in": "path",
                        "description": "The identity server API Resource unique resource name that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Client": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get the full list of identity server clients.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Client"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Client"
                ],
                "summary": "Creates a new identity server client.",
                "requestBody": {
                    "description": "Command used to create a new identity server client.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClientCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClientCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClientCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateClientCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Client/{clientId}": {
            "get": {
                "tags": [
                    "Client"
                ],
                "summary": "Get the identity server client that matches the provided client id.",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "The identity server client unique id.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Client"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Client"
                ],
                "summary": "Updates the identity server client entity.",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "The current id of the Client that will be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Command used to update a Client.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateClientCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Client"
                ],
                "summary": "Deletes the specified identity server Client.",
                "parameters": [
                    {
                        "name": "clientId",
                        "in": "path",
                        "description": "The unique id of the identity server client that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/ExternalIdentityProvider": {
            "get": {
                "tags": [
                    "ExternalIdentityProvider"
                ],
                "summary": "Get the list of external identity providers filtered based on the tenant global id.",
                "parameters": [
                    {
                        "name": "tenantGlobalId",
                        "in": "query",
                        "description": "Filter the external providers based on the tenant.",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ExternalIdentityProvider"
                ],
                "summary": "Creates a new external identity provider.",
                "requestBody": {
                    "description": "Command used to create a new external identity provider.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExternalIdentityProviderCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExternalIdentityProviderCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExternalIdentityProviderCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateExternalIdentityProviderCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/ExternalIdentityProvider/{externalIdentityProviderId}": {
            "get": {
                "tags": [
                    "ExternalIdentityProvider"
                ],
                "summary": "Get the external identity provider that matches the provided id.",
                "parameters": [
                    {
                        "name": "externalIdentityProviderId",
                        "in": "path",
                        "description": "The database id for which to fetch the externalIdentityProvider.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ExternalIdentityProviderDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ExternalIdentityProvider"
                ],
                "summary": "Updates the externalIdentityProvider entity",
                "parameters": [
                    {
                        "name": "externalIdentityProviderId",
                        "in": "path",
                        "description": "The database identifier of the external identity provider.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Command used to update a externalIdentityProvider.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExternalIdentityProviderCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExternalIdentityProviderCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExternalIdentityProviderCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateExternalIdentityProviderCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ExternalIdentityProvider"
                ],
                "summary": "Deletes the specified externalIdentityProvider.",
                "parameters": [
                    {
                        "name": "externalIdentityProviderId",
                        "in": "path",
                        "description": "The database id of the external identity \r\n            provider that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/IdentityResource": {
            "get": {
                "tags": [
                    "IdentityResource"
                ],
                "summary": "Get the full list of Identity Resources (Identity Server).",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityResource"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityResource"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/IdentityResource"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "IdentityResource"
                ],
                "summary": "Creates a new Identity Resource (Identity Server).",
                "requestBody": {
                    "description": "Command used to create a new identity server Identity Resource.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIdentityResourceCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIdentityResourceCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIdentityResourceCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateIdentityResourceCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int32"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/IdentityResource/{identityResourceName}": {
            "get": {
                "tags": [
                    "IdentityResource"
                ],
                "summary": "Get the Identity Resource (Identity Server) that matches the provided name.",
                "parameters": [
                    {
                        "name": "identityResourceName",
                        "in": "path",
                        "description": "The  identity server Identity Resource unique resource name to fetch.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResource"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResource"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResource"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "IdentityResource"
                ],
                "summary": "Updates the Identity Resource entity (Identity Server).",
                "parameters": [
                    {
                        "name": "identityResourceName",
                        "in": "path",
                        "description": "The current name of the Identity Resource that will be updated.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Command used to update a IdentityResource.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdentityResourceCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdentityResourceCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdentityResourceCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateIdentityResourceCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "IdentityResource"
                ],
                "summary": "Deletes the specified Identity Resource (Identity Server).",
                "parameters": [
                    {
                        "name": "identityResourceName",
                        "in": "path",
                        "description": "The unique name of the Identity Resource that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Language": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get the full list of languages.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LanguageDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LanguageDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/LanguageDto"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Language/{languageCode}/translations": {
            "get": {
                "tags": [
                    "Language"
                ],
                "summary": "Get the list of client translations based on the specified language.",
                "parameters": [
                    {
                        "name": "languageCode",
                        "in": "path",
                        "description": "The translation language code.",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "object",
                                    "additionalProperties": {
                                        "type": "string"
                                    }
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/LoginCallback": {
            "post": {
                "tags": [
                    "LoginCallback"
                ],
                "summary": "Redirects to the return URL.",
                "requestBody": {
                    "content": {
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "type": "object",
                                "properties": {
                                    "returnUrl": {
                                        "type": "string"
                                    }
                                }
                            },
                            "encoding": {
                                "returnUrl": {
                                    "style": "form"
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/MessageTemplate": {
            "post": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Create new message template.",
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageTemplateCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageTemplateCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageTemplateCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateMessageTemplateCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "integer",
                                    "format": "int64"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Get a message template using the provided filter.",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/MessageTemplate/{templateId}": {
            "get": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Get a message template by Id.",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Update existing message template.",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageTemplateCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageTemplateCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageTemplateCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateMessageTemplateCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/MessageTemplateDto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "MessageTemplate"
                ],
                "summary": "Delete the specified message template.",
                "parameters": [
                    {
                        "name": "templateId",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Partition/{partitionGlobalId}": {
            "get": {
                "tags": [
                    "Partition"
                ],
                "summary": "Get a single partition by its global Id.",
                "parameters": [
                    {
                        "name": "partitionGlobalId",
                        "in": "path",
                        "description": "The partition`s global Id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PartitionDto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "Partition"
                ],
                "summary": "Delete a partition by its global Id.",
                "parameters": [
                    {
                        "name": "partitionGlobalId",
                        "in": "path",
                        "description": "Target partition`s global Id to delete.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Partition": {
            "post": {
                "tags": [
                    "Partition"
                ],
                "summary": "Creates a new partition.",
                "requestBody": {
                    "description": "Command used to create a new partition.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePartitionCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePartitionCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePartitionCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePartitionCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partition"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partition"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Partition"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/RobotProperties": {
            "post": {
                "tags": [
                    "RobotProperties"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotClientSecretCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotClientSecretCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotClientSecretCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotClientSecretCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/RobotClientSecretDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RobotClientSecretDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RobotClientSecretDto"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "RobotProperties"
                ],
                "requestBody": {
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotPropertiesBulkDeleteCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotPropertiesBulkDeleteCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotPropertiesBulkDeleteCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/RobotPropertiesBulkDeleteCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Setting": {
            "get": {
                "tags": [
                    "Setting"
                ],
                "summary": "Get an application settings for a list of keys in a tenant",
                "parameters": [
                    {
                        "name": "key",
                        "in": "query",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "tenantGlobalId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "userId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "put": {
                "tags": [
                    "Setting"
                ],
                "summary": "Updates or create new settings if they don't exist on a specific tenant.",
                "requestBody": {
                    "description": "A bulk command to create/update a list of settings on a specific tenant.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateOrUpdateSettingsCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateOrUpdateSettingsCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateOrUpdateSettingsCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkCreateOrUpdateSettingsCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Setting/{settingId}": {
            "delete": {
                "tags": [
                    "Setting"
                ],
                "summary": "Deletes the specified setting.",
                "parameters": [
                    {
                        "name": "settingId",
                        "in": "path",
                        "description": "The database id of the setting that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "format": "int64"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/Tenant": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Get the full list of tenants.",
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenantDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenantDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/TenantDto"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Creates a new tenant. If tenant already exists with the same an update will be performed.",
                "requestBody": {
                    "description": "Command used to create a new tenant.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateTenantCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tenant"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/Tenant/{tenantGlobalId}": {
            "get": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Get the tenant that matches the provided id.",
                "parameters": [
                    {
                        "name": "tenantGlobalId",
                        "in": "path",
                        "description": "The database id for which to fetch the tenant.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TenantDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Updates the tenant entity.",
                "parameters": [
                    {
                        "name": "tenantGlobalId",
                        "in": "path",
                        "description": "The database identifier of the tenant.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Command used to update a tenant.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateTenantCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Tenant"
                ],
                "summary": "Deletes the specified tenant.",
                "parameters": [
                    {
                        "name": "tenantGlobalId",
                        "in": "path",
                        "description": "The tenant global id that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/User": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the list of users filtered based on the partition global id.",
                "description": "The maximum number of returned users is 1000.",
                "parameters": [
                    {
                        "name": "partitionGlobalId",
                        "in": "query",
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "skipNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "takeNumber",
                        "in": "query",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/UserDto"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Creates a new user or updates an existing one with the provided data.",
                "requestBody": {
                    "description": "The data used to create/update a new user.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUserCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResult"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResult"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/IdentityResult"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Bulk deletes the specified list of users.",
                "requestBody": {
                    "description": "The bulk delete command.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkSoftDeleteCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkSoftDeleteCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkSoftDeleteCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/BulkSoftDeleteCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/User/{userId}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get the user at the specified location",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The data used to create a new user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserDto"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "User"
                ],
                "summary": "Updates the specified user.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The database identifier of the user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The command that stores the information to update user.",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/UpdateUserCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Deletes the specified user.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The id of the user that will be deleted.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/User/{userId}/changepassword": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Changes the user's password.",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The database user id.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    }
                ],
                "requestBody": {
                    "description": "The change user password command..",
                    "content": {
                        "application/json-patch+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeUserPasswordCommand"
                            }
                        },
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeUserPasswordCommand"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeUserPasswordCommand"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangeUserPasswordCommand"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                }
            }
        },
        "/api/User/{userId}/loginAttempts": {
            "get": {
                "tags": [
                    "UserLoginAttempt"
                ],
                "summary": "Get the login attempts of a user",
                "parameters": [
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "The data used to create a new user.",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "top",
                        "in": "query",
                        "description": "The number of records to return. Default is 10.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "skip",
                        "in": "query",
                        "description": "The number of records to skip. Default is 0.",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "sortBy",
                        "in": "query",
                        "description": "The name of the field to sort by.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "sortOrder",
                        "in": "query",
                        "description": "The sort order.",
                        "schema": {
                            "$ref": "#/components/schemas/SortOrderDto"
                        }
                    },
                    {
                        "name": "since",
                        "in": "query",
                        "description": "The date since records should be returned.",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "content": {
                            "text/plain": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginAttemptDtoPagedResultDto"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginAttemptDtoPagedResultDto"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLoginAttemptDtoPagedResultDto"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "UserProfileDto": {
                "type": "object",
                "properties": {
                    "tenantName": {
                        "type": "string",
                        "nullable": true
                    },
                    "partitionGlobalId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userName": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ExternalIdentityProviderModel": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The database id of the external provider.",
                        "format": "int32"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the identity provider.",
                        "nullable": true
                    },
                    "authenticationScheme": {
                        "type": "string",
                        "description": "The authentication scheme used by the identity provider.",
                        "nullable": true
                    },
                    "isExclusive": {
                        "type": "boolean",
                        "description": "Flag indicating is the IDP is exclusive and should be the only one used."
                    }
                },
                "additionalProperties": false
            },
            "LoginModel": {
                "type": "object",
                "properties": {
                    "allowRememberLogin": {
                        "type": "boolean",
                        "description": "Flag indicating if allow remember me."
                    },
                    "enableBasicAuth": {
                        "type": "boolean",
                        "description": "Flag indicating if the basic authentication is enabled."
                    },
                    "externalIdentityProviders": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ExternalIdentityProviderModel"
                        },
                        "description": "The list of identity providers that we should display.",
                        "nullable": true
                    },
                    "clientName": {
                        "type": "string",
                        "description": "The name of the client that initiated the login.",
                        "nullable": true
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "The name of the requested tenant or empty if no tenant was specified via the request .",
                        "nullable": true
                    },
                    "cookieExpireMinutes": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "externalLogoutUrl": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Describes the login"
            },
            "LoginInputModel": {
                "required": [
                    "password",
                    "tenant",
                    "usernameOrEmail"
                ],
                "type": "object",
                "properties": {
                    "tenant": {
                        "type": "string",
                        "nullable": true
                    },
                    "usernameOrEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "nullable": true
                    },
                    "rememberLogin": {
                        "type": "boolean"
                    }
                },
                "additionalProperties": false
            },
            "ConfirmEmailModel": {
                "required": [
                    "code",
                    "userId"
                ],
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "The model used to confirm an user's email address."
            },
            "ForgotPasswordModel": {
                "required": [
                    "tenant",
                    "usernameOrEmail"
                ],
                "type": "object",
                "properties": {
                    "usernameOrEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "tenant": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ResetPasswordModel": {
                "required": [
                    "password",
                    "userId"
                ],
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "password": {
                        "maxLength": 100,
                        "minLength": 6,
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "confirmPassword": {
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "code": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ChangePasswordModel": {
                "required": [
                    "newPassword",
                    "oldPassword",
                    "userId"
                ],
                "type": "object",
                "properties": {
                    "userId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "oldPassword": {
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    },
                    "newPassword": {
                        "maxLength": 100,
                        "minLength": 6,
                        "type": "string",
                        "format": "password",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Secret": {
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    },
                    "expiration": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "type": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Scope": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "required": {
                        "type": "boolean"
                    },
                    "emphasize": {
                        "type": "boolean"
                    },
                    "showInDiscoveryDocument": {
                        "type": "boolean"
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ApiResource": {
                "type": "object",
                "properties": {
                    "apiSecrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Secret"
                        },
                        "nullable": true
                    },
                    "scopes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Scope"
                        },
                        "nullable": true
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateApiResourceCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name of the API. This value is used for authentication \r\nwith introspection and will be added to the audience of the outgoing access token.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The API Resource display name.",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of associated user claim types that should be included in the access token.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new identity server API resource."
            },
            "UpdateApiResourceCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name of the API. This value is used for authentication \r\nwith introspection and will be added to the audience of the outgoing access token.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The API Resource display name.",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of associated user claim types that should be included in the access token.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update an existing ApiResource."
            },
            "TokenUsage": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "TokenExpiration": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "AccessTokenType": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "ClaimsIdentity": {
                "type": "object",
                "properties": {
                    "authenticationType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "isAuthenticated": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "actor": {
                        "$ref": "#/components/schemas/ClaimsIdentity"
                    },
                    "bootstrapContext": {
                        "type": "object",
                        "additionalProperties": false,
                        "nullable": true
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Claim"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "label": {
                        "type": "string",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "nameClaimType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "roleClaimType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Claim": {
                "type": "object",
                "properties": {
                    "issuer": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "originalIssuer": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true,
                        "readOnly": true
                    },
                    "subject": {
                        "$ref": "#/components/schemas/ClaimsIdentity"
                    },
                    "type": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    },
                    "valueType": {
                        "type": "string",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "Client": {
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "clientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "protocolType": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientSecrets": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Secret"
                        },
                        "nullable": true
                    },
                    "requireClientSecret": {
                        "type": "boolean"
                    },
                    "clientName": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "clientUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "logoUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "requireConsent": {
                        "type": "boolean"
                    },
                    "allowRememberConsent": {
                        "type": "boolean"
                    },
                    "allowedGrantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "requirePkce": {
                        "type": "boolean"
                    },
                    "allowPlainTextPkce": {
                        "type": "boolean"
                    },
                    "allowAccessTokensViaBrowser": {
                        "type": "boolean"
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "frontChannelLogoutUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "frontChannelLogoutSessionRequired": {
                        "type": "boolean"
                    },
                    "backChannelLogoutUri": {
                        "type": "string",
                        "nullable": true
                    },
                    "backChannelLogoutSessionRequired": {
                        "type": "boolean"
                    },
                    "allowOfflineAccess": {
                        "type": "boolean"
                    },
                    "allowedScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "alwaysIncludeUserClaimsInIdToken": {
                        "type": "boolean"
                    },
                    "identityTokenLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "accessTokenLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "authorizationCodeLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "absoluteRefreshTokenLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "slidingRefreshTokenLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "consentLifetime": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "refreshTokenUsage": {
                        "$ref": "#/components/schemas/TokenUsage"
                    },
                    "updateAccessTokenClaimsOnRefresh": {
                        "type": "boolean"
                    },
                    "refreshTokenExpiration": {
                        "$ref": "#/components/schemas/TokenExpiration"
                    },
                    "accessTokenType": {
                        "$ref": "#/components/schemas/AccessTokenType"
                    },
                    "enableLocalLogin": {
                        "type": "boolean"
                    },
                    "identityProviderRestrictions": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "includeJwtId": {
                        "type": "boolean"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Claim"
                        },
                        "nullable": true
                    },
                    "alwaysSendClientClaims": {
                        "type": "boolean"
                    },
                    "clientClaimsPrefix": {
                        "type": "string",
                        "nullable": true
                    },
                    "pairWiseSubjectSalt": {
                        "type": "string",
                        "nullable": true
                    },
                    "userSsoLifetime": {
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "userCodeType": {
                        "type": "string",
                        "nullable": true
                    },
                    "deviceCodeLifetime": {
                        "type": "integer",
                        "format": "int32"
                    },
                    "allowedCorsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateClientCommand": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Unique ID of the client.",
                        "nullable": true
                    },
                    "clientName": {
                        "type": "string",
                        "description": "Client display name (used for logging and consent screen)",
                        "nullable": true
                    },
                    "frontChannelLogoutUri": {
                        "type": "string",
                        "description": "Specifies logout URI at client for HTTP based front-channel logout. \r\nSee the OIDC Front-Channel spec for more details.",
                        "nullable": true
                    },
                    "alwaysIncludeUserClaimsInIdToken": {
                        "type": "boolean",
                        "description": "When requesting both an id token and access token, should the user claims always be \r\nadded to the id token instead of requiring the client to use the userinfo endpoint. Default is false."
                    },
                    "alwaysSendClientClaims": {
                        "type": "boolean",
                        "description": "If set, the client claims will be sent for every flow.\r\nIf not, only for client credentials flow (default is false)."
                    },
                    "requireConsent": {
                        "type": "boolean",
                        "description": "Specifies whether a consent screen is required. Defaults to true."
                    },
                    "allowOfflineAccess": {
                        "type": "boolean",
                        "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
                    },
                    "identityTokenLifetime": {
                        "type": "integer",
                        "description": "Lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes)",
                        "format": "int32"
                    },
                    "accessTokenLifetime": {
                        "type": "integer",
                        "description": "Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour)",
                        "format": "int32"
                    },
                    "authorizationCodeLifetime": {
                        "type": "integer",
                        "description": "Lifetime of authorization code in seconds (defaults to 300 seconds / 5 minutes)",
                        "format": "int32"
                    },
                    "absoluteRefreshTokenLifetime": {
                        "type": "integer",
                        "description": "Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days",
                        "format": "int32"
                    },
                    "slidingRefreshTokenLifetime": {
                        "type": "integer",
                        "description": "Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days",
                        "format": "int32"
                    },
                    "clientSecrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of client secrets - credentials to access the token endpoint.",
                        "nullable": true
                    },
                    "allowedGrantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the grant types the client is allowed to use. Use the GrantTypes \r\nclass for common combinations.",
                        "nullable": true
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
                        "nullable": true
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies allowed URIs to redirect to after logout.\r\nSee the OIDC Connect Session Management spec for more details.",
                        "nullable": true
                    },
                    "allowedCorsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If specified, will be used by the default CORS policy service \r\nimplementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
                        "nullable": true
                    },
                    "allowedScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "By default a client has no access to any resources - specify \r\nthe allowed resources by adding the corresponding scopes names",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new identity server client."
            },
            "UpdateClientCommand": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "description": "Unique ID of the client.",
                        "nullable": true
                    },
                    "clientName": {
                        "type": "string",
                        "description": "Client display name (used for logging and consent screen)",
                        "nullable": true
                    },
                    "frontChannelLogoutUri": {
                        "type": "string",
                        "description": "Specifies logout URI at client for HTTP based front-channel logout. \r\nSee the OIDC Front-Channel spec for more details.",
                        "nullable": true
                    },
                    "alwaysIncludeUserClaimsInIdToken": {
                        "type": "boolean",
                        "description": "When requesting both an id token and access token, should the user claims always be \r\nadded to the id token instead of requiring the client to use the userinfo endpoint. Default is false."
                    },
                    "alwaysSendClientClaims": {
                        "type": "boolean",
                        "description": "If set, the client claims will be sent for every flow.\r\nIf not, only for client credentials flow (default is false)."
                    },
                    "requireConsent": {
                        "type": "boolean",
                        "description": "Specifies whether a consent screen is required. Defaults to true."
                    },
                    "allowOfflineAccess": {
                        "type": "boolean",
                        "description": "Specifies whether this client can request refresh tokens (be requesting the offline_access scope)."
                    },
                    "identityTokenLifetime": {
                        "type": "integer",
                        "description": "Lifetime of identity token in seconds (defaults to 300 seconds / 5 minutes)",
                        "format": "int32"
                    },
                    "accessTokenLifetime": {
                        "type": "integer",
                        "description": "Lifetime of access token in seconds (defaults to 3600 seconds / 1 hour)",
                        "format": "int32"
                    },
                    "authorizationCodeLifetime": {
                        "type": "integer",
                        "description": "Lifetime of authorization code in seconds (defaults to 300 seconds / 5 minutes)",
                        "format": "int32"
                    },
                    "absoluteRefreshTokenLifetime": {
                        "type": "integer",
                        "description": "Maximum lifetime of a refresh token in seconds. Defaults to 2592000 seconds / 30 days",
                        "format": "int32"
                    },
                    "slidingRefreshTokenLifetime": {
                        "type": "integer",
                        "description": "Sliding lifetime of a refresh token in seconds. Defaults to 1296000 seconds / 15 days",
                        "format": "int32"
                    },
                    "clientSecrets": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of client secrets - credentials to access the token endpoint.",
                        "nullable": true
                    },
                    "allowedGrantTypes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the grant types the client is allowed to use. Use the GrantTypes \r\nclass for common combinations.",
                        "nullable": true
                    },
                    "redirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies the allowed URIs to return tokens or authorization codes to.",
                        "nullable": true
                    },
                    "postLogoutRedirectUris": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Specifies allowed URIs to redirect to after logout.\r\nSee the OIDC Connect Session Management spec for more details.",
                        "nullable": true
                    },
                    "allowedCorsOrigins": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If specified, will be used by the default CORS policy service \r\nimplementations (In-Memory and EF) to build a CORS policy for JavaScript clients.",
                        "nullable": true
                    },
                    "allowedScopes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "By default a client has no access to any resources - specify \r\nthe allowed resources by adding the corresponding scopes names",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update an existing identity server client."
            },
            "ExternalIdentityProviderDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The database id of the external provider.",
                        "format": "int32"
                    },
                    "tenantGlobalId": {
                        "type": "string",
                        "description": "The global id of the tenant that this identity provider belongs to.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the identity provider.",
                        "nullable": true
                    },
                    "displayIcon": {
                        "type": "string",
                        "description": "The icon to be displayed next to the identity provider.\r\nOne of these values: [windows, adfs, openid, saml2, other, auth0, okta, google, azuread].",
                        "nullable": true
                    },
                    "authenticationScheme": {
                        "type": "string",
                        "description": "The authentication scheme used by the identity provider.",
                        "nullable": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The public identifier inside the external identity provider.",
                        "nullable": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The for the specified client.",
                        "nullable": true
                    },
                    "authority": {
                        "type": "string",
                        "description": "The address of the identity provider.",
                        "nullable": true
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The logout URL of the external provider.",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the external identity provider is active (enabled)."
                    },
                    "settings": {
                        "type": "string",
                        "description": "Json serialized provider settings",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateExternalIdentityProviderCommand": {
                "required": [
                    "authenticationScheme",
                    "displayName"
                ],
                "type": "object",
                "properties": {
                    "tenantGlobalId": {
                        "type": "string",
                        "description": "The global id of the tenant that this identity provider belongs to. \r\nCan be null for application level identity providers.",
                        "format": "uuid"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the identity provider.",
                        "nullable": true
                    },
                    "displayIcon": {
                        "type": "string",
                        "description": "The icon to be displayed next to the identity provider.\r\nOne of these values: [windows, adfs, openid, saml2, other, auth0, okta, google, azuread].",
                        "nullable": true
                    },
                    "authenticationScheme": {
                        "type": "string",
                        "description": "The authentication scheme used by the identity provider.",
                        "nullable": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The public identifier inside the external identity provider.",
                        "nullable": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The for the specified client.",
                        "nullable": true
                    },
                    "authority": {
                        "type": "string",
                        "description": "The address of the identity provider.",
                        "nullable": true
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The logout URL of the external identity provider.",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the external identity provider is active (enabled)."
                    },
                    "isExclusive": {
                        "type": "boolean",
                        "description": "Flag indicating is the IDP is exclusive and should be the only one used."
                    },
                    "settings": {
                        "type": "string",
                        "description": "Json serialized provider settings",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create an external identity provider."
            },
            "UpdateExternalIdentityProviderCommand": {
                "required": [
                    "authenticationScheme",
                    "displayName"
                ],
                "type": "object",
                "properties": {
                    "tenantGlobalId": {
                        "type": "string",
                        "description": "The global id of the tenant that this identity provider belongs to. \r\nCan be null for application level identity providers.",
                        "format": "uuid"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the identity provider.",
                        "nullable": true
                    },
                    "displayIcon": {
                        "type": "string",
                        "description": "The icon to be displayed next to the identity provider.\r\nOne of these values: [windows, adfs, openid, saml2, other, auth0, okta, google, azuread].",
                        "nullable": true
                    },
                    "authenticationScheme": {
                        "type": "string",
                        "description": "The authentication scheme used by the identity provider.",
                        "nullable": true
                    },
                    "clientId": {
                        "type": "string",
                        "description": "The public identifier inside the external identity provider.",
                        "nullable": true
                    },
                    "clientSecret": {
                        "type": "string",
                        "description": "The for the specified client.",
                        "nullable": true
                    },
                    "authority": {
                        "type": "string",
                        "description": "The address of the identity provider.",
                        "nullable": true
                    },
                    "logoutUrl": {
                        "type": "string",
                        "description": "The logout URL of the external identity provider.",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the external identity provider is active (enabled)."
                    },
                    "isExclusive": {
                        "type": "boolean",
                        "description": "Flag indicating is the IDP is exclusive and should be the only one used."
                    },
                    "settings": {
                        "type": "string",
                        "description": "Json serialized provider settings",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update an external identity provider."
            },
            "IdentityResource": {
                "type": "object",
                "properties": {
                    "required": {
                        "type": "boolean"
                    },
                    "emphasize": {
                        "type": "boolean"
                    },
                    "showInDiscoveryDocument": {
                        "type": "boolean"
                    },
                    "enabled": {
                        "type": "boolean"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "properties": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateIdentityResourceCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name of the identity resource. This is the value a client will\r\nuse for the scope parameter in the authorize request.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The Identity Resource display name.",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of associated user claim types that should be included in the identity token.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new identity server identity resource."
            },
            "UpdateIdentityResourceCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The unique name of the identity resource. This is the value a client \r\nwill use for the scope parameter in the authorize request.",
                        "nullable": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The identity Resource display name.",
                        "nullable": true
                    },
                    "userClaims": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of associated user claim types that should be included in the identity token.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update an existing IdentityResource."
            },
            "LanguageDto": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The language code.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The language name.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateMessageTemplateCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new message template"
            },
            "MessageTemplateDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "format": "int64"
                    },
                    "name": {
                        "type": "string",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateMessageTemplateCommand": {
                "type": "object",
                "properties": {
                    "value": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update an existing message template"
            },
            "PartitionType": {
                "enum": [
                    "Organization",
                    "Tenant"
                ],
                "type": "string"
            },
            "PartitionStatus": {
                "enum": [
                    "Active",
                    "Deleted"
                ],
                "type": "string"
            },
            "PartitionDto": {
                "type": "object",
                "properties": {
                    "globalId": {
                        "type": "string",
                        "description": "Partition`s global Id",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PartitionType"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PartitionStatus"
                    }
                },
                "additionalProperties": false
            },
            "CreatePartitionCommand": {
                "required": [
                    "globalId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "globalId": {
                        "type": "string",
                        "description": "The global identifier for the partition.",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PartitionType"
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new partition."
            },
            "Partition": {
                "required": [
                    "globalId",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The database id of the partition.",
                        "format": "int32"
                    },
                    "type": {
                        "$ref": "#/components/schemas/PartitionType"
                    },
                    "globalId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "status": {
                        "$ref": "#/components/schemas/PartitionStatus"
                    }
                },
                "additionalProperties": false,
                "description": "A partition that we can use to split the users. Eg tenant."
            },
            "RobotClientSecretCommand": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "secret": {
                        "type": "string",
                        "nullable": true
                    },
                    "robotUserKey": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "partitionGlobalId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "RobotClientSecretDto": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "robotUserKey": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "partitionGlobalId": {
                        "type": "string",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "RobotPropertiesBulkDeleteCommand": {
                "type": "object",
                "properties": {
                    "clientId": {
                        "type": "string",
                        "nullable": true
                    },
                    "robotUserKeys": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "CreateOrUpdateSettingCommand": {
                "required": [
                    "key"
                ],
                "type": "object",
                "properties": {
                    "key": {
                        "type": "string",
                        "description": "The setting Key",
                        "nullable": true
                    },
                    "value": {
                        "type": "string",
                        "description": "The value of the setting.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create or update an application setting."
            },
            "BulkCreateOrUpdateSettingsCommand": {
                "required": [
                    "settings"
                ],
                "type": "object",
                "properties": {
                    "settings": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CreateOrUpdateSettingCommand"
                        },
                        "description": "The list of settings to be created/updated.",
                        "nullable": true
                    },
                    "tenantGlobalId": {
                        "type": "string",
                        "description": "The tenant global Id of the setting. Null means host tenant.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The user global Id of the setting.",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Class used to create/update a list of settings in a bulk operation."
            },
            "TenantDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The local database id.",
                        "format": "int32"
                    },
                    "name": {
                        "type": "string",
                        "description": "The tenant name . The same with tenancy name.",
                        "nullable": true
                    },
                    "globalId": {
                        "type": "string",
                        "description": "The global identifier of the tenant.",
                        "format": "uuid"
                    },
                    "enableBasicAuth": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant supports basic authentication."
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating is the tenant is active (enabled)."
                    }
                },
                "additionalProperties": false
            },
            "CreateTenantCommand": {
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The tenant's name.",
                        "nullable": true
                    },
                    "globalId": {
                        "type": "string",
                        "description": "The global identifier for the tenant.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant is active (enabled)."
                    },
                    "enableBasicAuth": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant supports basic authentication."
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new tenant."
            },
            "Tenant": {
                "required": [
                    "name",
                    "normalizedName"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The local database id.",
                        "format": "int32"
                    },
                    "globalId": {
                        "type": "string",
                        "description": "The global identifier for the tenant.",
                        "format": "uuid"
                    },
                    "name": {
                        "type": "string",
                        "description": "The tenant name . The same with tenancy name.",
                        "nullable": true
                    },
                    "normalizedName": {
                        "type": "string",
                        "description": "The tenant normalized name.",
                        "nullable": true
                    },
                    "enableBasicAuth": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant supports basic authentication."
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant is active (enabled)."
                    },
                    "isDeleted": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant is deleted."
                    },
                    "partitionId": {
                        "type": "integer",
                        "description": "Every tenant represent a partition.",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Tenant used in a multi-tenancy architecture."
            },
            "UpdateTenantCommand": {
                "type": "object",
                "properties": {
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant is active (enabled)."
                    },
                    "enableBasicAuth": {
                        "type": "boolean",
                        "description": "Flag indicating if the tenant supports basic authentication."
                    }
                },
                "additionalProperties": false
            },
            "UserDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The database id (Guid).",
                        "format": "uuid"
                    },
                    "userName": {
                        "type": "string",
                        "description": "The username.",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address.",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The first name of the user.",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "description": "The last name of the user.",
                        "nullable": true
                    },
                    "creationTime": {
                        "type": "string",
                        "description": "The user's creation time.",
                        "format": "date-time"
                    },
                    "lastModificationTime": {
                        "type": "string",
                        "description": "The user's last modification time.",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastLoginTime": {
                        "type": "string",
                        "description": "The user's last login time.",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UserType": {
                "enum": [
                    0,
                    1,
                    2,
                    3
                ],
                "type": "integer",
                "description": "Defines how a user was created and how it is supposed to be used.",
                "format": "int32"
            },
            "CreateUserCommand": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "The user global id",
                        "format": "uuid",
                        "nullable": true
                    },
                    "userName": {
                        "type": "string",
                        "description": "The user's name.",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address.",
                        "format": "email",
                        "nullable": true
                    },
                    "name": {
                        "type": "string",
                        "description": "The name of the user.",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "description": "The name of the user.",
                        "nullable": true
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's passwrod.",
                        "nullable": true
                    },
                    "partitionGlobalId": {
                        "type": "string",
                        "description": "The tenant global id that the user belongs to.",
                        "format": "uuid"
                    },
                    "type": {
                        "$ref": "#/components/schemas/UserType"
                    },
                    "validatePassword": {
                        "type": "boolean",
                        "description": "Flag indicating if we need to validate the password."
                    }
                },
                "additionalProperties": false,
                "description": "Command used to create a new user."
            },
            "IdentityError": {
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "IdentityResult": {
                "type": "object",
                "properties": {
                    "succeeded": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "errors": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IdentityError"
                        },
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "BulkSoftDeleteCommand": {
                "type": "object",
                "properties": {
                    "partitionGlobalId": {
                        "type": "string",
                        "format": "uuid"
                    },
                    "userIds": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "format": "uuid"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "UpdateUserCommand": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "The name of the user.",
                        "nullable": true
                    },
                    "surname": {
                        "type": "string",
                        "description": "The name of the user.",
                        "nullable": true
                    },
                    "email": {
                        "type": "string",
                        "description": "The user's email address.",
                        "format": "email",
                        "nullable": true
                    },
                    "isActive": {
                        "type": "boolean",
                        "description": "Flag indicating if the user is active."
                    },
                    "password": {
                        "type": "string",
                        "description": "The user's new password.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to update the user."
            },
            "ChangeUserPasswordCommand": {
                "type": "object",
                "properties": {
                    "oldPassword": {
                        "type": "string",
                        "description": "The user's old password.",
                        "nullable": true
                    },
                    "newPassword": {
                        "type": "string",
                        "description": "The user's new password.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Command used to change user's password."
            },
            "SortOrderDto": {
                "enum": [
                    0,
                    1
                ],
                "type": "integer",
                "format": "int32"
            },
            "LoginAttemptResult": {
                "enum": [
                    1,
                    2,
                    3,
                    4,
                    5,
                    6,
                    7,
                    8,
                    9
                ],
                "type": "integer",
                "format": "int32"
            },
            "UserLoginAttemptDto": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "The database identifier of the UserLoginAttempt",
                        "format": "int64"
                    },
                    "tenantName": {
                        "type": "string",
                        "description": "The name of the tenant on which the attempt was made.",
                        "nullable": true
                    },
                    "userId": {
                        "type": "string",
                        "description": "The id of the user on which the attempt was made.",
                        "format": "uuid",
                        "nullable": true
                    },
                    "userNameOrEmailAddress": {
                        "type": "string",
                        "description": "The user/email address used in the attempt.",
                        "nullable": true
                    },
                    "clientIpAddress": {
                        "type": "string",
                        "description": "The IP address of the client",
                        "nullable": true
                    },
                    "clientName": {
                        "type": "string",
                        "description": "The name of the PC from where the attempt was made.",
                        "nullable": true
                    },
                    "browserInfo": {
                        "type": "string",
                        "description": "Information about the browser that was used in the attempt.",
                        "nullable": true
                    },
                    "result": {
                        "$ref": "#/components/schemas/LoginAttemptResult"
                    },
                    "creationTime": {
                        "type": "string",
                        "description": "The date and time when the attempt was made.",
                        "format": "date-time"
                    },
                    "partitionGlobalId": {
                        "type": "string",
                        "description": "The global partition id.",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false
            },
            "UserLoginAttemptDtoPagedResultDto": {
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "The total number of entities.",
                        "format": "int64"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserLoginAttemptDto"
                        },
                        "description": "The results from the current page.",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            }
        },
        "securitySchemes": {
            "Bearer": {
                "type": "apiKey",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Bearer {token}\"",
                "name": "Authorization",
                "in": "header"
            }
        }
    },
    "security": [
        {
            "Bearer": []
        }
    ]
}